//global components
.tag-chip {
    display: inline-flex;
    padding: 0.15rem 0.55rem;
    width: fit-content;
}

fieldset {
}
// #scene-display-bar {
//     &,
//     & *:not(button, image, li) {
//         background: none;
//         background-color: transparent;
//         box-shadow: none;
//         // pointer-events: none;
//     }
// }
.display-bar {
    display: flex;
    flex-wrap: wrap;
    background: none;
    background-color: transparent;
    li.character,
    li.innerScene {
        box-shadow: 0px 0px 8px 2px rgb(0 0 0 / 87%);
        border: 2px solid white;
        list-style-type: none;
        max-width: 3rem;
        max-height: 3rem;
        aspect-ratio: 1/1;
        border-radius: 10px;
        transition: transform 150ms ease-in;
        &:hover {
            transform: scale(1.12);
        }
        .hover-controls {
            z-index: 800;
            li {
                z-index: 900;
            }
            button {
                z-index: 900;
                transition: background-color 150ms ease-in;
                &:hover {
                    background-color: var(--clr-purple-base);
                }
            }
        }
        img {
            width: 100%;
            height: 100%;
            object-fit: cover;
            border-radius: 10px;
        }
    }
    .character-group {
        display: flex;
    }
    .scene-group {
        display: flex;
        flex-direction: column;
    }
}

.tag-input-span {
    background-color: $eerie-black-4;
    display: inline-flex;
    justify-content: space-evenly;
    flex-wrap: wrap;
    height: fit-content;
    width: 100%;
    gap: 0.5rem;
    padding: 0.5rem;

    #tag-input {
        background-color: transparent;
        width: unset;
        min-width: 40%;
        flex: 2;
    }

    button {
        display: inline-flex;
        flex: 0;
    }
}
#inner-scene-display {
    // width: 50vw;
    width: 60vw;
    height: 50vh;
    .button-group {
        display: flex;
        // flex-direction: column;
        padding: 0.5rem 1rem;
        background-color: var(--tui-black4);
        width: fit-content;
    }

    .window-content {
        background-color: hsla(223, 8%, 17%, 0.5);
        border: hsla(0, 0%, 28%, 0.5);
        @supports (backdrop-filter: blur(8px)) {
            backdrop-filter: blur(8px);
        }
    }
    &,
    & *:not(button, image, li, input, label, select, option, .window-content, hr, fieldset) {
        background-color: transparent;
    }

    &.transparent,
    &.transparent *:not(button, image, li, input, label, select, option, hr, fieldset, .window-header) {
        background: none;
        background-color: transparent;
        box-shadow: none;
        pointer-events: none;
        overflow: visible;
        .window-content {
            overflow: visible;
            background-color: transparent;
            background: none;
            width: fit-content;
            // background-color: hsla(0, 0%, 80%, 0.5);
            // border: hsla(0, 0%, 98%, 0.5);
            backdrop-filter: unset;
        }
    }
    &.transparent {
        width: fit-content;
    }
    & *:is(button, image, li, input, label, select, option) {
        pointer-events: auto;
    }
}
.editModeWrapper {
    display: flex;
    flex-direction: column;
    gap: 1rem;
}

li {
    position: relative;
    &:hover {
        .hover-controls {
            opacity: 100%;
            transform: scale(1);
        }
    }
    .hover-controls {
        padding: 0;
        margin: 0;
        position: absolute;
        top: 100%;
        left: 0;
        display: flex;
        // justify-content: space-evenly;
        flex-direction: column;
        opacity: 0%;
        transform: scale(0);
        transition-delay: 100ms;
        transition: transform 150ms ease-in, opacity 150ms ease-in;
        &:hover {
            opacity: 100%;
            transform: scale(1);
            transition-delay: 150ms;
            transition: transform 150ms ease-out, opacity 150ms ease-out;
        }
        li,
        button {
            aspect-ratio: unset;
            display: flex;
            width: fit-content;
        }
    }
}
.character-group,
.scene-group {
    gap: 0.5rem;
    li.interactive {
        img {
            width: 100%;
            height: 100%;
            object-fit: cover;
        }
    }
}

.characterOptions,
.addedToScene,
.innerScenes {
    display: flex;
    flex-wrap: wrap;
    gap: 1rem;

    .option {
        display: grid;
        grid-template-columns: minmax(20px, 2rem) 1fr;
        grid-template-rows: 100%;
        align-items: center;
        gap: 0.5rem;
        overflow: hidden;
        // max-width: 20%;
        max-height: 50px;
        padding-right: 0.5rem;
        img {
            grid-column: 1/2;
            // max-width: 20%;
            object-fit: cover;
            height: 100%;
        }
        p {
            margin: 0;
            grid-column: 2/3;
        }
    }
}

.character-scene-display {
    display: flex;
    flex-direction: column;
    justify-content: space-evenly;
    gap: 1rem;
    position: relative;
    overflow-y: auto;
    min-height: 20vh;
    &.compact {
        justify-content: flex-start;
        gap: 0rem;
    }

    /** change this */
    fieldset {
        display: flex;
        // justify-content: space-evenly;
    }

    .character-list {
        display: grid;
        grid-template-columns: repeat(auto-fill, 10rem);
        gap: 1rem;
    }

    .button-wrapper {
        display: flex;
        margin-left: auto;
        gap: 1rem;
    }

    .views,
    .interactions {
        display: flex;
    }

    .chip {
        input[type="radio"],
        input[type="checkbox"] {
            display: none;
            position: absolute;
            overflow: hidden;
            clip: rect(0 0 0 0);
            height: 1px;
            width: 1px;
            margin: -1px;
            padding: 0;
            border: 0;

            & ~ label {
                /* background-color: transparent; */
                border: 1px solid cornflowerblue !important;
                /* color: cornflowerblue; */
                padding: 0.5em 1em;
                text-align: center;
                border-radius: 9999px;
                z-index: 10;
                display: inline-block;
                vertical-align: middle;
                display: flex;
                align-items: center;
                gap: 0.45rem;

                &:hover {
                    cursor: pointer;
                }
            }

            &:checked ~ label {
                background-color: cornflowerblue;
                color: white;
                font-weight: bold;
            }
        }
    }
}

#character-profile-config {
    // max-width: 50vw;
    min-width: 40vw;
}

#character-full-profile {
    background-color: scale-color($eerie-black, $alpha: -35%);
    border-color: scale-color($eerie-black-3, $alpha: -35%);
    max-width: 50vw;

    .window-app,
    .window-content,
    .full-profile {
        background-color: transparent;
    }

    .full-profile {
        padding: clamp(1rem, 1rem + 1vh, 2rem);
        z-index: 400;
        display: grid;
        grid-template-columns: 40% 1fr;
        grid-template-rows: 10% 1fr 1fr;
        row-gap: 0.5rem;
        justify-items: stretch;
        border-radius: 5px;
        border: 2px solid double;

        h3,
        p {
            background-color: scale-color($eerie-black-4, $alpha: -35%);
        }

        > img {
            border-radius: 10px;
            grid-column: 1/2;
            grid-row: 1/5;
            margin: 1rem;
            justify-items: stretch;
        }

        > header {
            grid-row: 1/2;
            grid-column: 2/3;
            display: flex;
            justify-content: space-evenly;
            align-items: center;
            background-color: scale-color($eerie-black-4, $alpha: -35%);
            height: fit-content;

            h3 {
                flex: 2;
                height: fit-content;
                padding: 0.5rem;
                margin: 0;
                background-color: transparent;
            }
        }

        > p {
            grid-column: 2/3;
            grid-row: 2/3;
        }

        .input-and-label-wrapper {
        }

        .tag-input-span {
            grid-column: 2/3;
            grid-row: 3/5;
            background-color: $eerie-black-4;
            display: inline-flex;
            justify-content: space-evenly;
            flex-wrap: wrap;
            // width: 2rem;
            height: fit-content;
            width: 100%;
            gap: 0.5rem;
            padding: 0.5rem;

            .tag-chip {
                display: inline-flex;
                padding: 0.15rem 0.25rem;
            }

            #tag-input {
                background-color: transparent;
                width: unset;
                min-width: 40%;
                flex: 2;
            }

            button {
                display: inline-flex;
                flex: 0;
            }
        }
    }
}
.iframe-display {
    min-width: 50vw;
    min-height: 40vh;
    iframe {
        width: 100%;
        height: 100%;
    }
}

.actor-section {
    position: relative;
    background-color: $eerie-black;
    max-width: 100%;
    padding: clamp(0.25rem, 1vw + 0.5rem, 1rem);
    display: flex;
    flex-direction: row;
    flex-wrap: wrap;
    justify-content: center;
    gap: 1rem;
    align-items: center;
    transition: background-color 100ms ease-in-out;

    .horizontal-button-wrapper {
        position: absolute;
        top: 0;
        right: 0;
        opacity: 0%;
        transition: opacity 100ms ease-in-out;

        button {
            box-shadow: 2px 2px 5px rgba(0, 0, 0, 0.5);
        }
    }

    &:hover {
        background-color: $eerie-black-4;
        cursor: pointer;
        color: var(--color-accent-base);

        .horizontal-button-wrapper {
            opacity: 100%;
        }
    }

    &.character {
        position: relative;
        overflow: visible;

        .full-profile {
            min-width: 200%;
            min-height: fit-content;
            // min-height: 50%;
            padding: clamp(1rem, 1rem + 1vh, 2rem);
            pointer-events: none;
            background-color: $jet-3;
            position: absolute;
            z-index: 400;
            display: grid;
            grid-template-columns: 1fr 1fr;
            grid-template-rows: 1fr 1fr 1fr;
            opacity: 0;
            border-radius: 5px;
            border: 2px solid double;
            box-shadow: 2px 2px 2px 2px rgba(0, 0, 0, 0.5);

            > img {
                max-width: 50%;
                grid-column: 1/2;
                grid-row: 1/4;
            }

            > h3 {
                grid-column: 2/3;
                grid-row: 1/2;
            }

            > p {
                grid-column: 2/3;
                grid-row: 2/4;
            }
        }
    }

    .actor-icon {
        border-radius: 10px;
        object-fit: cover;
    }
}

.actor-list {
    position: absolute;
    overflow: scroll;
    max-height: 45vh;
}
